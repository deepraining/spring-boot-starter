buildscript {
  repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    jcenter()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
  }

  dependencies {
    classpath 'cn.hutool:hutool-core:4.5.10'
  }
}

import cn.hutool.core.io.FileUtil;

plugins {
  id 'java'
  id 'application'
  id 'checkstyle'
  id 'com.github.sherter.google-java-format' version '0.8'
  id 'org.springframework.boot' version '2.1.4.RELEASE'
  id "io.freefair.lombok" version "3.5.2"
  id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

allprojects {
  repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    jcenter()
    mavenCentral()
    maven { url 'http://repo.spring.io/release' }
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'application'
  apply plugin: 'io.freefair.lombok'

  dependencies {
    // spring boot
    implementation('org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE') {
      exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.1.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-devtools:2.1.4.RELEASE'
    implementation 'org.springframework.data:spring-data-commons:2.1.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.1.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-logging:2.1.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.1.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-undertow:2.1.4.RELEASE'

    // database
    implementation 'org.mybatis:mybatis:3.5.1'
    implementation 'mysql:mysql-connector-java:8.0.16'
    implementation 'com.zaxxer:HikariCP:3.3.1'

    // tool
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.11'
    implementation 'com.github.pagehelper:pagehelper:5.1.9'
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // util
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'cn.hutool:hutool-core:4.5.10'

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE'
  }

  /**
   * Watch java files' changes, and recompile
   *
   * ```
   * ./gradlew pro-*:watchJava -t
   * ./gradlew pro-*:watchJava --continuous
   * ```
   */
  // noinspection GroovyAssignabilityCheck
  task watchJava(type: GradleBuild) {
    description "Watch java files' changes, and recompile."
    inputs.files 'src/main/java'
    tasks = ['compileJava']
  }
}

def mbgMapperExcludePath = 'pro-mbg/src/main/java/senntyou/sbs/mbg/mapper/'
def mbgModelExcludePath = 'pro-mbg/src/main/java/senntyou/sbs/mbg/model/'

googleJavaFormat {
  toolVersion = "1.7"
  exclude mbgMapperExcludePath
  exclude mbgModelExcludePath
}

checkstyle {
  toolVersion '8.21'
}

/**
 * checkstyle all java files
 *
 * @note - Task[Checkstyle] depends on Plugin[checkstyle]
 *       - Checkstyle does not have functionality of auto-fixing
 */
// noinspection GroovyAssignabilityCheck
task checkJava(type: Checkstyle) {
  configFile = file('config/checkstyle/checkstyle.xml')
  classpath = files()
  source './'
  exclude mbgMapperExcludePath
  exclude mbgModelExcludePath

  if (System.properties.checkJavaInclude != null) {
    def s = ((String)System.properties.checkJavaInclude).split(',')
    def i = Arrays.asList(s)
    include i
  }
}

// Copy git pre-commit hook
if (FileUtil.exist('.git') && !FileUtil.exist('.git/hooks/pre-commit')) {
  FileUtil.copyFile('config/hooks/pre-commit-stub', '.git/hooks/pre-commit');
}
